name: core
on:
  push:
    branches:
      - 'master'
  pull_request:
    types: ['labeled', 'opened', 'synchronize', 'reopened']

concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # the result of the matrix will be the combination of all attributes, so we get os*compiler builds
        include:
          - os: ubuntu-20.04
            compiler: clang12
          - os: ubuntu-20.04
            compiler: clang11
          - os: ubuntu-20.04
            compiler: gcc # default in 20.04 is gcc 9
          - os: ubuntu-20.04
            compiler: gcc10
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}-${{ matrix.compiler }}
    env:
      COMPILER: ${{ matrix.compiler }}
    if: |
      github.repository == 'azerothcore/azerothcore-wotlk'
      && !github.event.pull_request.draft
      && (
        github.ref == 'refs/heads/master'
        || contains(github.event.pull_request.labels.*.name, 'file-cpp'
        || github.event.label.name == 'file-cpp'
        || contains(github.event.pull_request.labels.*.name, 'run-build')
        || github.event.label.name == 'run-build')
      )
    steps:
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: var/ccache
          key: ccache:${{ matrix.os }}:${{ matrix.compiler }}:${{ github.ref }}:${{ github.sha }}
          restore-keys: |
            ccache:${{ matrix.os }}:${{ matrix.compiler }}:${{ github.ref }}
            ccache:${{ matrix.os }}:${{ matrix.compiler }}
      - name: Configure OS
        run: source ./acore.sh install-deps
        env:
          CONTINUOUS_INTEGRATION: true
      - name: Create conf/config.sh
        run: source ./apps/ci/ci-conf-core.sh
      - name: Process pending sql
        run: bash bin/acore-db-pendings
      - name: Build
        run: source ./apps/ci/ci-compile.sh
      - name: Dry run authserver
        run: source ./apps/ci/ci-dry-run.sh authserver
      - name: Dry run worldserver
        run: source ./apps/ci/ci-dry-run.sh worldserver
      - name: Check startup errors
        run: source ./apps/ci/ci-error-check.sh
      - name: Run unit tests
        run: source ./apps/ci/ci-run-unit-tests.sh
