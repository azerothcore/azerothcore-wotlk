name: docker-build
on:
  push:
    branches:
      - 'master'
  pull_request:
    types: ['labeled']

concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true

jobs:
  docker-build-n-deploy:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    if: github.repository == 'azerothcore/azerothcore-wotlk' && github.event.label.name == 'run-build' || github.ref == 'refs/heads/master'
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      BUILDKIT_INLINE_CACHE: 1

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - uses: actions/checkout@v2

      - name: Configure
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          docker --version
          docker-compose --version

    # TODO: make it work
    #   - uses: whoan/docker-build-with-cache-action@v5
    #     with:
    #       image_tag: master
    #       username: ${{ secrets.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}
    #       compose_file: docker-compose.yml

      - name: Login to Docker Hub
        if: github.repository == 'azerothcore/azerothcore-wotlk' && steps.extract_branch.outputs.branch == 'master'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      # before cache
      # needed to avoid ccache injected into these images
      - name: Build Dev
        env:
          #DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
          DOCKER_EXTENDS_BIND: abstract-no-bind
          DOCKER_CLIENT_TIMEOUT: 400
          COMPOSE_HTTP_TIMEOUT: 400
        run: |
          export DOCKER_USER_ID=$(id -u)
          export DOCKER_GROUP_ID=$(id -u)
          docker-compose --profile dev --profile local build --parallel

      - name: Deploy Dev
        #env:
        #  DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        if: github.repository == 'azerothcore/azerothcore-wotlk' && steps.extract_branch.outputs.branch == 'master'
        run: |
          docker-compose --profile dev --profile local push

      - name: Cache
        uses: actions/cache@v2
        with:
          path: var/docker/ccache
          key: ccache:${{ matrix.os }}:clang:without-modules:${{ github.ref }}:${{ github.sha }}
          restore-keys: |
            ccache:${{ matrix.os }}:clang:without-modules:${{ github.ref }}
            ccache:${{ matrix.os }}:clang:without-modules

      - name: Build Production images
        env:
          #DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
          DOCKER_EXTENDS_BIND: abstract-no-bind
          DOCKER_AC_BUILD_TARGET: build
          DOCKER_CLIENT_TIMEOUT: 220
          COMPOSE_HTTP_TIMEOUT: 220
        run: |
          export DOCKER_USER_ID=$(id -u)
          export DOCKER_GROUP_ID=$(id -u)
          docker-compose --profile build --profile prod build --parallel
          docker-compose run --no-deps --name build ac-build echo "image created"
          docker cp build:/azerothcore/var/ccache var/docker/
          echo "ccache exported"

      - name: Deploy Production images
        #env:
        #  DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        if: github.repository == 'azerothcore/azerothcore-wotlk' && steps.extract_branch.outputs.branch == 'master'
        run: |
          docker-compose --profile prod push
